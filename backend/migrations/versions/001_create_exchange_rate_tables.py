"""create exchange rate tables

Revision ID: 001
Revises: 
Create Date: 2024-07-21 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 创建资产类型配置表
    op.create_table('asset_type_config',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('asset_type', sa.String(length=32), nullable=False),
        sa.Column('default_currency', sa.String(length=8), nullable=False),
        sa.Column('asset_category', sa.String(length=32), nullable=False),
        sa.Column('region', sa.String(length=16), nullable=False),
        sa.Column('precision', sa.Integer(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_asset_type_config_asset_type'), 'asset_type_config', ['asset_type'], unique=True)
    op.create_index(op.f('ix_asset_type_config_id'), 'asset_type_config', ['id'], unique=False)
    
    # 创建用户资产偏好表
    op.create_table('user_asset_preferences',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('asset_type', sa.String(length=32), nullable=False),
        sa.Column('preferred_currency', sa.String(length=8), nullable=False),
        sa.Column('effective_from', sa.DateTime(), nullable=False),
        sa.Column('effective_to', sa.DateTime(), nullable=True),
        sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_asset_effective', 'user_asset_preferences', ['user_id', 'asset_type', 'effective_from'], unique=False)
    op.create_index(op.f('ix_user_asset_preferences_asset_type'), 'user_asset_preferences', ['asset_type'], unique=False)
    op.create_index(op.f('ix_user_asset_preferences_id'), 'user_asset_preferences', ['id'], unique=False)
    op.create_index(op.f('ix_user_asset_preferences_user_id'), 'user_asset_preferences', ['user_id'], unique=False)
    
    # 创建汇率时间轴表
    op.create_table('exchange_rate_timeline',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('from_currency', sa.String(length=8), nullable=False),
        sa.Column('to_currency', sa.String(length=8), nullable=False),
        sa.Column('rate', sa.DECIMAL(precision=32, scale=8), nullable=False),
        sa.Column('effective_time', sa.DateTime(), nullable=False),
        sa.Column('source', sa.String(length=32), nullable=False),
        sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rate_lookup', 'exchange_rate_timeline', ['from_currency', 'to_currency', 'effective_time'], unique=False)
    op.create_index(op.f('ix_exchange_rate_timeline_effective_time'), 'exchange_rate_timeline', ['effective_time'], unique=False)
    op.create_index(op.f('ix_exchange_rate_timeline_from_currency'), 'exchange_rate_timeline', ['from_currency'], unique=False)
    op.create_index(op.f('ix_exchange_rate_timeline_id'), 'exchange_rate_timeline', ['id'], unique=False)
    op.create_index(op.f('ix_exchange_rate_timeline_to_currency'), 'exchange_rate_timeline', ['to_currency'], unique=False)
    
    # 创建账户余额快照表
    op.create_table('account_balance_snapshots',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('asset_type', sa.String(length=32), nullable=False),
        sa.Column('balance', sa.DECIMAL(precision=32, scale=8), nullable=False),
        sa.Column('snapshot_time', sa.DateTime(), nullable=False),
        sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_balance_snapshot_lookup', 'account_balance_snapshots', ['user_id', 'asset_type', 'snapshot_time'], unique=False)
    op.create_index('idx_snapshot_time', 'account_balance_snapshots', ['snapshot_time'], unique=False)
    op.create_index(op.f('ix_account_balance_snapshots_asset_type'), 'account_balance_snapshots', ['asset_type'], unique=False)
    op.create_index(op.f('ix_account_balance_snapshots_id'), 'account_balance_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_account_balance_snapshots_user_id'), 'account_balance_snapshots', ['user_id'], unique=False)
    
    # 创建资产展示配置表
    op.create_table('asset_display_configs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('display_name', sa.String(length=64), nullable=False),
        sa.Column('currencies', postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column('base_currency', sa.String(length=8), nullable=False),
        sa.Column('layout_type', sa.String(length=32), nullable=False),
        sa.Column('is_default', sa.Boolean(), nullable=True),
        sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_asset_display_configs_id'), 'asset_display_configs', ['id'], unique=False)
    op.create_index(op.f('ix_asset_display_configs_user_id'), 'asset_display_configs', ['user_id'], unique=False)
    
    # 创建Wise API配置表
    op.create_table('wise_api_configs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('api_key', sa.String(length=255), nullable=False),
        sa.Column('api_url', sa.String(length=255), nullable=False),
        sa.Column('profile_id', sa.String(length=64), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('rate_limit', sa.Integer(), nullable=True),
        sa.Column('last_request', sa.DateTime(), nullable=False),
        sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wise_api_configs_id'), 'wise_api_configs', ['id'], unique=False)
    
    # 创建汇率来源配置表
    op.create_table('exchange_rate_sources',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('from_currency', sa.String(length=8), nullable=False),
        sa.Column('to_currency', sa.String(length=8), nullable=False),
        sa.Column('source_type', sa.String(length=32), nullable=False),
        sa.Column('source_config', postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column('update_interval', sa.Integer(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('last_update', sa.DateTime(), nullable=True),
        sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exchange_rate_sources_from_currency'), 'exchange_rate_sources', ['from_currency'], unique=False)
    op.create_index(op.f('ix_exchange_rate_sources_id'), 'exchange_rate_sources', ['id'], unique=False)
    op.create_index(op.f('ix_exchange_rate_sources_id'), 'exchange_rate_sources', ['id'], unique=False)
    op.create_index(op.f('ix_exchange_rate_sources_to_currency'), 'exchange_rate_sources', ['to_currency'], unique=False)
    
    # 创建汇率更新日志表
    op.create_table('rate_update_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('source_type', sa.String(length=32), nullable=False),
        sa.Column('from_currency', sa.String(length=8), nullable=False),
        sa.Column('to_currency', sa.String(length=8), nullable=False),
        sa.Column('status', sa.String(length=20), nullable=False),
        sa.Column('rate_value', sa.DECIMAL(precision=32, scale=8), nullable=False),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('request_duration_ms', sa.Integer(), nullable=True),
        sa.Column('records_updated', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rate_update_status', 'rate_update_logs', ['source_type', 'status', 'created_at'], unique=False)
    op.create_index(op.f('ix_rate_update_logs_created_at'), 'rate_update_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_rate_update_logs_id'), 'rate_update_logs', ['id'], unique=False)
    op.create_index(op.f('ix_rate_update_logs_source_type'), 'rate_update_logs', ['source_type'], unique=False)
    
    # 添加唯一约束
    op.create_unique_constraint('uq_rate_timeline', 'exchange_rate_timeline', ['from_currency', 'to_currency', 'effective_time'])
    op.create_unique_constraint('uq_rate_source', 'exchange_rate_sources', ['from_currency', 'to_currency', 'source_type'])
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 删除表
    op.drop_table('rate_update_logs')
    op.drop_table('exchange_rate_sources')
    op.drop_table('wise_api_configs')
    op.drop_table('asset_display_configs')
    op.drop_table('account_balance_snapshots')
    op.drop_table('exchange_rate_timeline')
    op.drop_table('user_asset_preferences')
    op.drop_table('asset_type_config')
    
    # ### end Alembic commands ###