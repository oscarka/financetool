# 简化版Dockerfile - 用于调试
FROM debian:latest AS flutter-build

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    && rm -rf /var/lib/apt/lists/*

# 创建flutter用户
RUN useradd -m -s /bin/bash flutter

# 切换到flutter用户
USER flutter

# 设置Flutter环境变量
ENV FLUTTER_HOME="/home/flutter/flutter"
ENV PATH="$FLUTTER_HOME/bin:$PATH"

# 下载并安装Flutter SDK
RUN git clone --depth 1 -b stable https://github.com/flutter/flutter.git $FLUTTER_HOME

# 初始化Flutter
RUN flutter doctor

# 创建工作目录
WORKDIR /app

# 复制Flutter配置文件
COPY --chown=flutter:flutter personal_finance_flutter/flutter_pubspec.yaml pubspec.yaml
COPY --chown=flutter:flutter personal_finance_flutter/pubspec.lock ./

# 安装Flutter依赖
RUN flutter pub get

# 复制所有源代码
COPY --chown=flutter:flutter personal_finance_flutter/ .

# 构建Flutter Web应用
RUN flutter build web --release --no-tree-shake-icons

# 生产环境 - 使用nginx提供静态文件服务
FROM nginx:alpine AS production

# 安装调试工具
RUN apk add --no-cache gettext bash curl

# 从构建阶段复制web文件
COPY --from=flutter-build /app/build/web /usr/share/nginx/html

# 复制nginx配置模板
COPY personal_finance_flutter/nginx.conf.server /etc/nginx/conf.d/default.conf.template

# 复制备用页面
COPY simple-index.html /usr/share/nginx/html/simple.html

# 设置环境变量
ENV PORT=80

# 暴露端口
EXPOSE $PORT

# 创建自定义entrypoint脚本
RUN echo '#!/bin/bash' > /docker-entrypoint-custom.sh && \
    echo 'set -e' >> /docker-entrypoint-custom.sh && \
    echo 'echo "=== Custom Entrypoint Debug ==="' >> /docker-entrypoint-custom.sh && \
    echo 'echo "Date: $(date)"' >> /docker-entrypoint-custom.sh && \
    echo 'echo "PWD: $(pwd)"' >> /docker-entrypoint-custom.sh && \
    echo 'echo "PORT: $PORT"' >> /docker-entrypoint-custom.sh && \
    echo 'echo "Files in /usr/share/nginx/html:"' >> /docker-entrypoint-custom.sh && \
    echo 'ls -la /usr/share/nginx/html/' >> /docker-entrypoint-custom.sh && \
    echo 'echo "=== Generating nginx config ==="' >> /docker-entrypoint-custom.sh && \
    echo 'envsubst '"'"'$PORT'"'"' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf' >> /docker-entrypoint-custom.sh && \
    echo 'echo "Generated config:"' >> /docker-entrypoint-custom.sh && \
    echo 'cat /etc/nginx/conf.d/default.conf' >> /docker-entrypoint-custom.sh && \
    echo 'echo "=== Testing nginx config ==="' >> /docker-entrypoint-custom.sh && \
    echo 'nginx -t' >> /docker-entrypoint-custom.sh && \
    echo 'echo "=== Starting nginx ==="' >> /docker-entrypoint-custom.sh && \
    echo 'exec nginx -g "daemon off;"' >> /docker-entrypoint-custom.sh && \
    chmod +x /docker-entrypoint-custom.sh

# 使用自定义entrypoint
ENTRYPOINT ["/docker-entrypoint-custom.sh"]
